# This workflow will test the Dart code in the repository
# to make sure that the quality of the code is high.
name: Dart
on:
  push:
    # Run the workflow on the main branch on push
    branches: [ "main" ]
  pull_request:
    # Run the workflow on the main branch on pull requests
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.24.0

      # Install NetKit dependencies
      - name: Install Package dependencies
        run: flutter pub get
        working-directory: packages/net-kit

      # Install Flutter Integration Test dependencies
      - name: Install Flutter Integration Test dependencies
        run: flutter pub get
        working-directory: flutter_integration_test

      # Check for formatting issues
      - name: Check formatting
        run: dart format --set-exit-if-changed ./packages/net-kit

      # Analyze the project source
      - name: Analyze project source
        run: dart analyze --fatal-infos --fatal-warnings

      # Run unit tests to ensure that the code is working as expected
      - name: Run unit tests
        run: dart test
        working-directory: packages/net-kit

      # Start Android emulator
      - name: Android Emulator Runner
        uses: ReactiveCircus/android-emulator-runner@v2.32.0
        with:
          api-level: 30
          target: default
          arch: x86_64
          profile: default
          script: |
            adb shell input keyevent 82

      # Run integration tests to ensure that the code is working as expected
      - name: Run integration tests
        run: flutter drive --target=integration_test/typicode_test.dart
        working-directory: flutter_integration_test